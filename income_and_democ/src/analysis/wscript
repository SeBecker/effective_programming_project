#! python


'''
DIFFERENT DATASET SPECIFICATIONS FOR REGRESSION ON INDICATOR VARIABLES:
    'EST'  = OLS estimates from regressing main variables (mortality, expropr. risk, GDP) on
             campaign and laborer indicators
    'CORR' = Correlation of expropriation risk and GDP with mortality (with and without indicators)

DIFFERENT DATASET SPECIFICATIONS FOR FIRST STAGE AND IV ESTIMATION:
    1 = PANEL_A: Original mortality data (64 countries)
    2 = PANEL_B: Only countries with non-conjectured mortality rates (rest: 28 countries)
    3 = PANEL_C: Original data (64 countries) with campaign and laborer indicators
    4 = PANEL_D: Only countries with non-conjectured mortality rates, campaign + laborer indicators
    5 = PANEL_E: As Panel D with new data provided by AJR
'''

# Illustrate simple use of run_do_script for the data that underlies table
# 1.


def build(ctx):

    models = [
        'FHI',
        'POL']

    for p in models:

        ctx(
            features='subst',
            source='regression.do',
            target='{}_regression.do'.format(p)
        )

        ctx(
            features='run_do_script',
            source='{}_regression.do'.format(p),
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log',
                            '{}_regression.log'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_estimation_results.dta'.format(p)),
            ],
            deps=[
                ctx.path_to(ctx, 'OUT_DATA', '5_year_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_DATA', 'annual_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_DATA', '10_year_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_DATA', '20_year_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_MODEL_SPECS', '{}.do'.format(p)),
            ],
            name='{}_regression'.format(p),
            append=p
        )
        ctx(
            features='subst',
            source='IVestimation.do',
            target='{}_IVestimation.do'.format(p)
        )
        ctx(
            features='run_do_script',
            source='{}_IVestimation.do'.format(p),
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log',
                            '{}_IVestimation.log'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_nsaveup_IVestimation_results.dta'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_worldincomeup_IVestimation_results.dta'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_nsavedo_IVestimation_results.dta'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_worldincomedo_IVestimation_results.dta'.format(p))
            ],
            deps=[
                ctx.path_to(ctx, 'OUT_DATA', '5_year_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_MODEL_SPECS', '{}.do'.format(p)),
            ],
            name='{}_IVestimation'.format(p),
            append=p
        )

        ctx(
            features='subst',
            source='robustness_check.do',
            target='{}_robustness_check.do'.format(p)
        )
        ctx(
            features='run_do_script',
            source='{}_robustness_check.do'.format(p),
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log',
                            '{}_robustness_check.log'.format(p)),
                ctx.path_to(ctx, 'OUT_ANALYSIS',
                            '{}_robustness_check_results.dta'.format(p))

            ],
            deps=[
                ctx.path_to(ctx, 'OUT_DATA', '5_year_panel_all.dta'),
                ctx.path_to(ctx, 'OUT_MODEL_SPECS', '{}.do'.format(p))
            ],
            name='{}_robustness_check'.format(p),
            append=p
        )

    ctx(
        features='run_do_script',
        source='long_run.do',
        target=[
            ctx.path_to(ctx, 'OUT_ANALYSIS', 'log',
                        'long_run.log'),
            ctx.path_to(ctx, 'OUT_ANALYSIS',
                        'long_run_25.dta'),
            ctx.path_to(ctx, 'OUT_ANALYSIS',
                        'long_run_50.dta'),

        ],
        deps=[
            ctx.path_to(ctx, 'OUT_DATA', '25_year_panel_all.dta'),
            ctx.path_to(ctx, 'OUT_DATA', '50_year_panel_all.dta'),
            ctx.path_to(ctx, 'OUT_MODEL_SPECS', 'POL.do'),
        ],
        name='long_run',
    )
